{"version":3,"file":"static/js/292.640a0ba8.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.jsx","hooks/useHttp.js","pages/SingleComicsPage.jsx","services/MarvelServices.js"],"sourcesContent":["import React from 'react';\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = ({error}) => {\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", padding: \"5px 10px\"}}>\r\n            <p style={{fontSize: \"24px\", color: \"red\"}}>{error}</p>\r\n            <img\r\n                style={{\r\n                    display: \"block\",\r\n                    width: \"250px\",\r\n                    height: \"250px\",\r\n                    objectFit: \"contain\",\r\n                    margin: \"0 auto\"\r\n                }}\r\n                src={img} alt=\"ErrorPage message\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = (callback) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const fetching = useCallback(async (...args) => {\r\n        try {\r\n            setLoading(true);\r\n            await callback(...args);\r\n        } catch (e) {\r\n            setError(e.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(\"\"), []);\r\n\r\n    return [fetching, loading, error, clearError];\r\n}","import React, {useEffect, useState} from 'react';\r\nimport \"./SingleComicPage.scss\";\r\nimport {useParams} from \"react-router\";\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport MarvelServices from \"../services/MarvelServices\";\r\nimport ErrorMessage from \"../components/errorMessage/errorMessage\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst SingleComicsPage = () => {\r\n\r\n    const {id} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const [updateComic, loading, error, comicClearError] = useHttp(async (comicID) => {\r\n        if (!comicID) {\r\n            return;\r\n        }\r\n        comicClearError();\r\n        const comic = await MarvelServices.getComics(comicID);\r\n        setComic(comic);\r\n    });\r\n\r\n    useEffect(() => {\r\n        updateComic(id);\r\n    }, [id]);\r\n\r\n    const errorMessage = error ? <ErrorMessage error={error}/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst View = ({comic}) => {\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={comic?.thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{comic.title}</h2>\r\n                <p className=\"single-comic__descr\">{comic.description}</p>\r\n                <p className=\"single-comic__descr\">{comic.pageCount} pages</p>\r\n                <p className=\"single-comic__descr\">Language: en-us</p>\r\n                <div className=\"single-comic__price\">{comic.price}$</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default SingleComicsPage;","import axios from \"axios\";\r\n\r\nexport default class MarvelServices {\r\n    static _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    static _apiKey = \"apikey=14c80cf078481fb3ded0db419a38bd66\";\r\n\r\n    static async getCharacters(limit = 9, offset = 210) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`);\r\n        return response.data.data.results.map(character => MarvelServices._transformCharacter(character));\r\n    }\r\n\r\n    static async getCharacter(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters/${id}?${MarvelServices._apiKey}`);\r\n        return MarvelServices._transformCharacter(response.data.data.results[0]);\r\n    }\r\n\r\n    static async getAllComics(limit = 8, offset = 210) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}comics?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`);\r\n        return response.data.data.results.map(comics => MarvelServices._transformComics(comics));\r\n    }\r\n\r\n    static async getComics(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}comics/${id}?${MarvelServices._apiKey}`);\r\n        console.log(response.data.data.results[0]);\r\n        return MarvelServices._transformComics(response.data.data.results[0]);\r\n    }\r\n\r\n    static _transformCharacter = (character) => {\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description,\r\n            thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items\r\n        }\r\n    }\r\n\r\n    static _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            issueNumber: comics.issueNumber,\r\n            description: comics.description,\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price,\r\n            pageCount: comics.pageCount,\r\n        }\r\n    }\r\n}"],"names":["error","style","display","flexDirection","alignItems","padding","fontSize","color","width","height","objectFit","margin","src","img","alt","useHttp","callback","useState","loading","setLoading","setError","fetching","useCallback","message","View","comic","className","thumbnail","title","description","pageCount","price","to","id","useParams","setComic","comicID","comicClearError","MarvelServices","updateComic","useEffect","errorMessage","spinner","Spinner","content","limit","offset","axios","_apiBase","_apiKey","response","data","results","map","character","_transformCharacter","comics","_transformComics","console","log","name","path","extension","homepage","urls","url","wiki","items","issueNumber","prices"],"sourceRoot":""}