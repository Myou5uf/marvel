{"version":3,"file":"static/js/370.2f45b1fc.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/errorMessage.jsx","hooks/useHttp.js","pages/layouts/SinglePageLayout.jsx","services/MarvelServices.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import React from 'react';\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = ({error}) => {\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", padding: \"5px 10px\"}}>\r\n            <p style={{fontSize: \"24px\", color: \"red\"}}>{error}</p>\r\n            <img\r\n                style={{\r\n                    display: \"block\",\r\n                    width: \"250px\",\r\n                    height: \"250px\",\r\n                    objectFit: \"contain\",\r\n                    margin: \"0 auto\"\r\n                }}\r\n                src={img} alt=\"ErrorPage message\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = (callback) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const fetching = useCallback(async (...args) => {\r\n        try {\r\n            setLoading(true);\r\n            await callback(...args);\r\n        } catch (e) {\r\n            setError(e.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(\"\"), []);\r\n\r\n    return [fetching, loading, error, clearError];\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MarvelServices from \"../../services/MarvelServices\";\r\nimport { useHttp } from \"../../hooks/useHttp\";\r\nimport ErrorMessage from \"../../components/errorMessage/errorMessage\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\nimport AppBanner from \"../../components/appBanner/AppBanner\";\r\n\r\nconst SinglePageLayout = ({ Component, dataType }) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n\r\n    const [updateData, loading, error, clearError] = useHttp(async () => {\r\n        clearError();\r\n        switch (dataType) {\r\n            case \"comic\":\r\n                const comic = await MarvelServices.getComics(id);\r\n                setData(comic);\r\n                break;\r\n            case \"character\":\r\n                const character = await MarvelServices.getCharacter(id);\r\n                setData(character);\r\n                break;\r\n            default:\r\n                setData({});\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [id]);\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !data) ? <Component data={data} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SinglePageLayout;\r\n","import axios from \"axios\";\r\n\r\nexport default class MarvelServices {\r\n    static _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    static _apiKey = \"apikey=14c80cf078481fb3ded0db419a38bd66\";\r\n\r\n    static async getCharacters(limit = 9, offset = 210) {\r\n        const response = await axios.get(\r\n            `${MarvelServices._apiBase}characters?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`\r\n        );\r\n        return response.data.data.results.map((character) => MarvelServices._transformCharacter(character));\r\n    }\r\n\r\n    static async getCharacter(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters/${id}?${MarvelServices._apiKey}`);\r\n        return MarvelServices._transformCharacter(response.data.data.results[0]);\r\n    }\r\n\r\n    static async getCharacterByName(name) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters?name=${name}&${MarvelServices._apiKey}`);\r\n        return response.data.data.results;\r\n    }\r\n\r\n    static async getAllComics(limit = 8, offset = 210) {\r\n        const response = await axios.get(\r\n            `${MarvelServices._apiBase}comics?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`\r\n        );\r\n        return response.data.data.results.map((comics) => MarvelServices._transformComics(comics));\r\n    }\r\n\r\n    static async getComics(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}comics/${id}?${MarvelServices._apiKey}`);\r\n        return MarvelServices._transformComics(response.data.data.results[0]);\r\n    }\r\n\r\n    static _transformCharacter = (character) => {\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description,\r\n            thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items,\r\n        };\r\n    };\r\n\r\n    static _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            issueNumber: comics.issueNumber,\r\n            description: comics.description,\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price,\r\n            pageCount: comics.pageCount,\r\n        };\r\n    };\r\n}\r\n"],"names":["className","src","avengers","alt","avengersLogo","error","style","display","flexDirection","alignItems","padding","fontSize","color","width","height","objectFit","margin","img","useHttp","callback","useState","loading","setLoading","setError","fetching","useCallback","message","Component","dataType","id","useParams","data","setData","clearError","MarvelServices","comic","character","updateData","useEffect","errorMessage","spinner","content","limit","offset","axios","_apiBase","_apiKey","response","results","map","_transformCharacter","name","comics","_transformComics","description","thumbnail","path","extension","homepage","urls","url","wiki","items","title","issueNumber","price","prices","pageCount"],"sourceRoot":""}