{"version":3,"file":"static/js/95.3e51b943.chunk.js","mappings":"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","sources":["components/errorMessage/errorMessage.jsx","hooks/useHttp.js","components/randomChar/RandomChar.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","components/charList/CharList.js","components/errorBoundary/ErrorBoundary.jsx","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","pages/CharactersPage.jsx","services/MarvelServices.js"],"sourcesContent":["import React from 'react';\r\nimport img from \"./error.gif\";\r\n\r\nconst ErrorMessage = ({error}) => {\r\n    return (\r\n        <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", padding: \"5px 10px\"}}>\r\n            <p style={{fontSize: \"24px\", color: \"red\"}}>{error}</p>\r\n            <img\r\n                style={{\r\n                    display: \"block\",\r\n                    width: \"250px\",\r\n                    height: \"250px\",\r\n                    objectFit: \"contain\",\r\n                    margin: \"0 auto\"\r\n                }}\r\n                src={img} alt=\"ErrorPage message\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = (callback) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const fetching = useCallback(async (...args) => {\r\n        try {\r\n            setLoading(true);\r\n            await callback(...args);\r\n        } catch (e) {\r\n            setError(e.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(\"\"), []);\r\n\r\n    return [fetching, loading, error, clearError];\r\n}","import React, {useEffect, useState} from \"react\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelServices from \"../../services/MarvelServices\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport {useHttp} from \"../../hooks/useHttp\";\n\nconst RandomChar = () => {\n\n    const [character, setCharacter] = useState({});\n    let timerId;\n    const [randomFetching, randomLoading, randomError, randomClearError] = useHttp(async () => {\n        randomClearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        const character = await MarvelServices.getCharacter(id);\n        setCharacter(character);\n    });\n\n    const tryItButton = () => {\n        randomFetching();\n    }\n\n    useEffect(() => {\n        randomFetching();\n        timerId = setInterval(randomFetching, 6000);\n\n        return () => {\n            clearInterval(timerId);\n        }\n    }, []);\n\n    const errorMessage = randomError ? <ErrorMessage error={randomError}/> : null;\n    const spinner = randomLoading ? <Spinner/> : null;\n    const content = !(randomLoading || randomError) ? <View character={character}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={tryItButton}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    );\n}\n\nconst View = ({character}) => {\n    const {name, thumbnail, description, homepage, wiki} = character;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img\n                style={thumbnail?.includes(\"image_not_available\") ? {objectFit: \"contain\"} : null}\n                src={thumbnail}\n                alt=\"Random character\"\n                className=\"randomchar__img\"\n            />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description ? description.slice(0, 120) + \"...\" : \"Нет описания\"}\n\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import React from 'react';\nexport default React.createContext(null);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import React, { useEffect, useState } from \"react\";\nimport \"./charList.scss\";\nimport MarvelServices from \"../../services/MarvelServices\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { useHttp } from \"../../hooks/useHttp\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst CharList = ({ selectedCharacterId, setSelectedCharacterId, setVisibleBgImage }) => {\n    const [characters, setCharacters] = useState([]);\n\n    const [newCharactersLoading, setNewCharactersLoading] = useState(false);\n    const [limit, setLimit] = useState(9);\n    const [offset, setOffset] = useState(210);\n    const [charactersEnded, setCharactersEnded] = useState(false);\n\n    const [charFetching, charLoading, charError] = useHttp(async (limit = 9, offset = 210, initial = false) => {\n        initial ? setNewCharactersLoading(false) : setNewCharactersLoading(true);\n        const characters = await MarvelServices.getCharacters(limit, offset);\n        setNewCharactersLoaded(characters);\n        setNewCharactersLoading(false);\n        setVisibleBgImage(true);\n    });\n\n    useEffect(() => {\n        charFetching(limit, offset, true);\n    }, []);\n\n    const setNewCharactersLoaded = (newCharactersList) => {\n        let ended = false;\n        if (newCharactersList.length < 9) {\n            ended = true;\n        }\n\n        setCharacters((characters) => [...characters, ...newCharactersList]);\n        setOffset((offset) => offset + limit);\n        setCharactersEnded(ended);\n    };\n\n    const errorMessage = charError ? <ErrorMessage error={charError} /> : null;\n    const spinner = charLoading && !newCharactersLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            <View\n                characters={characters}\n                selectedCharacterId={selectedCharacterId}\n                setSelectedCharacterId={setSelectedCharacterId}\n            />\n            <button\n                className=\"button button__main button__long\"\n                disabled={newCharactersLoading}\n                onClick={() => charFetching(limit, offset, false)}\n                style={{ display: charactersEnded ? \"none\" : \"block\" }}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n};\n\nconst View = ({ characters, selectedCharacterId, setSelectedCharacterId }) => {\n    return (\n        <ul className=\"char__grid\">\n            <TransitionGroup component={null}>\n                {characters.map((character, index) => {\n                    const classes = [\"char__item\"];\n                    if (selectedCharacterId === character.id) classes.push(\"char__item_selected\");\n                    return (\n                        <CSSTransition key={character.id} timeout={500} classNames=\"char__item\">\n                            <li\n                                className={classes.join(\" \")}\n                                tabIndex={index}\n                                onClick={() => setSelectedCharacterId(character.id)}\n                                onKeyDown={(e) => {\n                                    if (e.key === \"Tab\" || e.key === \"Enter\") {\n                                        setSelectedCharacterId(character.id);\n                                    }\n                                }}>\n                                <img\n                                    style={\n                                        character.thumbnail.includes(\"image_not_available\")\n                                            ? { objectFit: \"unset\" }\n                                            : null\n                                    }\n                                    src={character.thumbnail}\n                                    alt=\"abyss\"\n                                />\n                                <div className=\"char__name\">{character.name}</div>\n                            </li>\n                        </CSSTransition>\n                    );\n                })}\n            </TransitionGroup>\n        </ul>\n    );\n};\n\nCharList.propTypes = {\n    setSelectedCharacterId: PropTypes.func,\n    setVisibleBgImage: PropTypes.func,\n};\n\nexport default CharList;\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n        console.log(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Можно отрендерить запасной UI произвольного вида\r\n            return <h1>Что-то пошло не так.</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import React, {useEffect, useState} from \"react\";\nimport './charInfo.scss';\nimport MarvelServices from \"../../services/MarvelServices\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\nimport Spinner from \"../spinner/Spinner\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport PropTypes from 'prop-types';\nimport {useHttp} from \"../../hooks/useHttp\";\n\nconst CharInfo = ({selectedCharacterId}) => {\n    const [character, setCharacter] = useState(null);\n    const [updateCharacter, loading, error, charClearError] = useHttp(async (characterID) => {\n        if (!characterID) {\n            return;\n        }\n        charClearError();\n        const character = await MarvelServices.getCharacter(characterID);\n        setCharacter(character);\n    });\n\n    useEffect(() => {\n        updateCharacter(selectedCharacterId);\n    }, [selectedCharacterId]);\n\n    const skeleton =  character || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage error={error}/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !character) ? <View character={character}/> : null;\n    // this.foo.bar = 0; // testing for ErrorBoundary\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    );\n}\n\n\nconst View = ({character}) => {\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img\n                    style={character.thumbnail?.includes(\"image_not_available\") ? {objectFit: \"contain\"} : null}\n                    src={character.thumbnail}\n                    alt=\"abyss\"\n                />\n                <div>\n                    <div className=\"char__info-name\">{character.name}</div>\n                    <div className=\"char__btns\">\n                        <a href={character.homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={character.wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {character.description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {character.comics.length ? null : \"There is no comics with this character\"}\n                {character.comics.map((item, index) =>\n                    <li key={index} className=\"char__comics-item\">\n                        {item.name}\n                    </li>\n                )}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    selectedCharacterId: PropTypes.number,\n}\n\nexport default CharInfo;","import React, {useState} from 'react';\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport ErrorBoundary from \"../components/errorBoundary/ErrorBoundary\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\nimport decoration from \"../resources/img/vision.png\";\r\n\r\nconst CharactersPage = () => {\r\n\r\n    const [selectedCharacterId, setSelectedCharacterId] = useState(null);\r\n    const [visibleBgImage, setVisibleBgImage] = useState(false);\r\n\r\n    const changeSelectedCharacterId = (id) => setSelectedCharacterId(id);\r\n    const changeVisibleBgImage = (visible) => setVisibleBgImage(visible);\r\n\r\n    return (\r\n        <>\r\n            <RandomChar/>\r\n            <div className=\"char__content\">\r\n                <CharList selectedCharacterId={selectedCharacterId}\r\n                          setSelectedCharacterId={changeSelectedCharacterId}\r\n                          setVisibleBgImage={changeVisibleBgImage}/>\r\n                <ErrorBoundary>\r\n                    <CharInfo selectedCharacterId={selectedCharacterId}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img style={visibleBgImage ? null : {display: \"none\"}} className=\"bg-decoration\" src={decoration}\r\n                 alt=\"vision\"/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CharactersPage;","import axios from \"axios\";\r\n\r\nexport default class MarvelServices {\r\n    static _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    static _apiKey = \"apikey=14c80cf078481fb3ded0db419a38bd66\";\r\n\r\n    static async getCharacters(limit = 9, offset = 210) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`);\r\n        return response.data.data.results.map(character => MarvelServices._transformCharacter(character));\r\n    }\r\n\r\n    static async getCharacter(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}characters/${id}?${MarvelServices._apiKey}`);\r\n        return MarvelServices._transformCharacter(response.data.data.results[0]);\r\n    }\r\n\r\n    static async getAllComics(limit = 8, offset = 210) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}comics?limit=${limit}&offset=${offset}&${MarvelServices._apiKey}`);\r\n        return response.data.data.results.map(comics => MarvelServices._transformComics(comics));\r\n    }\r\n\r\n    static async getComics(id) {\r\n        const response = await axios.get(`${MarvelServices._apiBase}comics/${id}?${MarvelServices._apiKey}`);\r\n        console.log(response.data.data.results[0]);\r\n        return MarvelServices._transformComics(response.data.data.results[0]);\r\n    }\r\n\r\n    static _transformCharacter = (character) => {\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description,\r\n            thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items\r\n        }\r\n    }\r\n\r\n    static _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            issueNumber: comics.issueNumber,\r\n            description: comics.description,\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price,\r\n            pageCount: comics.pageCount,\r\n        }\r\n    }\r\n}"],"names":["error","style","display","flexDirection","alignItems","padding","fontSize","color","width","height","objectFit","margin","src","img","alt","useHttp","callback","useState","loading","setLoading","setError","fetching","useCallback","message","View","character","name","thumbnail","description","homepage","wiki","className","includes","slice","href","timerId","setCharacter","randomClearError","id","Math","floor","random","MarvelServices","randomFetching","randomLoading","randomError","useEffect","setInterval","clearInterval","errorMessage","spinner","Spinner","content","onClick","mjolnir","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","bind","arguments","prototype","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","constructor","setPrototypeOf","React","getChildMapping","children","mapFn","result","Children","c","forEach","child","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","_assertThisInitialized","state","contextValue","isMounting","firstRender","_proto","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","render","_this$props","Component","component","childFactory","TransitionGroupContext","Provider","value","propTypes","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","forceReflow","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","initialStatus","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","cancel","nextState","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","childProps","noop","contextType","removeClass","classes","split","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","characters","selectedCharacterId","setSelectedCharacterId","index","join","tabIndex","onKeyDown","e","setVisibleBgImage","setCharacters","newCharactersLoading","setNewCharactersLoading","limit","offset","setOffset","charactersEnded","setCharactersEnded","initial","setNewCharactersLoaded","charFetching","charLoading","charError","newCharactersList","ended","disabled","hasError","errorInfo","console","log","comics","item","characterID","charClearError","updateCharacter","skeleton","visibleBgImage","visible","decoration","axios","_apiBase","_apiKey","response","data","results","_transformCharacter","_transformComics","path","extension","urls","url","items","title","issueNumber","price","prices","pageCount"],"sourceRoot":""}